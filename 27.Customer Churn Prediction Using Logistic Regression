import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import numpy as np

data = {
    'usage_minutes': [300, 250, 100, 400, 150, 500, 200, 100, 350, 450],
    'contract_months': [12, 24, 6, 12, 6, 36, 18, 3, 24, 12],
    'churn': [0, 0, 1, 0, 1, 0, 0, 1, 0, 0]
}

df = pd.DataFrame(data)

X = df[['usage_minutes', 'contract_months']]
y = df['churn']

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

model = LogisticRegression()
model.fit(X_train, y_train)


usage = float(input("Enter usage minutes: "))
contract = float(input("Enter contract duration in months: "))
new_data = scaler.transform([[usage, contract]])

prediction = model.predict(new_data)

print("Prediction (1 = Churn, 0 = Not Churn):", int(prediction[0]))
